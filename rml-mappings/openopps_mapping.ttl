###################################################################################################
# RML mapping rules for OCDS 1.0 (https://standard.open-contracting.org/1.0/en/release-schema.json)
# 
# Copyright: SINTEF 2018-2021
# Author   : Brian Elves√¶ter (brian.elvesater@sintef.no)
# License  : Apache License 2.0 (http://www.apache.org/licenses/LICENSE-2.0)
# Project  : Developed as part of the TheyBuyForYou project (https://theybuyforyou.eu/)
# Funding  : TheyBuyForYou has received funding from the European Union's Horizon 2020
#            research and innovation programme under grant agreement No 780247
###################################################################################################


# RML prefixes
@prefix rr:       <http://www.w3.org/ns/r2rml#> .
@prefix rml:      <http://semweb.mmlab.be/ns/rml#> .
@prefix ql:       <http://semweb.mmlab.be/ns/ql#> .

# Own prefixes
@base             <http://data.tbfy.eu/> .
@prefix tbfy:     <http://data.tbfy.eu/ontology/tbfy#> . 
@prefix ocds:     <http://data.tbfy.eu/ontology/ocds#> .

# External prefixes
@prefix dc:       <http://purl.org/dc/terms/> .
@prefix foaf:     <http://xmlns.com/foaf/0.1/> .
@prefix owl:      <http://www.w3.org/2002/07/owl#> .
@prefix rdf:      <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix schema:   <http://schema.org/> .
@prefix skos:     <http://www.w3.org/2004/02/skos/core#> .
@prefix xsd:      <http://www.w3.org/2001/XMLSchema#> .


# *********************
# Release mapping rules
# *********************

<ReleaseMap>
  a rr:TriplesMap ;

  rml:logicalSource [
    rml:source "input.xml" ; 
    rml:referenceFormulation ql:XPath ;
    rml:iterator "/root"
  ];

  rr:subjectMap [
    rr:template "http://data.tbfy.eu/contractingProcess/{releases/ocid}/release/{releases/id}" ;
    rr:class tbfy:Release
  ];
  
  rr:predicateObjectMap [
    rr:predicate tbfy:releaseURI ;
    rr:objectMap [
      rml:reference "uri" ;
      rr:datatype xsd:anyURI
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate tbfy:releasePublishedDate ;
    rr:objectMap [
      rml:reference "publishedDate" ;
      rr:datatype xsd:dateTime
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate tbfy:releasePublisherUID ;
    rr:objectMap [
      rml:reference "publisher/uid" ;
      rr:datatype xsd:string
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate tbfy:releasePublisherURI ;
    rr:objectMap [
      rml:reference "publisher/uri" ;
      rr:datatype xsd:anyURI
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate tbfy:releasePublisherName ;
    rr:objectMap [
      rml:reference "publisher/name" ;
      rr:datatype xsd:string
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate tbfy:releasePublisherScheme ;
    rr:objectMap [
      rml:reference "publisher/scheme" ;
      rr:datatype xsd:string
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate tbfy:releaseLicense ;
    rr:objectMap [
      rml:reference "license" ;
      rr:datatype xsd:string
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate tbfy:releasePublicationPolicy ;
    rr:objectMap [
      rml:reference "publicationPolicy" ;
      rr:datatype xsd:string 
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate tbfy:releaseId ;
    rr:objectMap [
      rml:reference "releases/id" ;
      rr:datatype xsd:string
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate tbfy:releaseDate ;
    rr:objectMap [
      rml:reference "releases/date" ;
      rr:datatype xsd:dateTime
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate tbfy:releaseTag ;
    rr:objectMap [
      rml:reference "releases/tag" ;
      rr:datatype xsd:string
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate dc:language ;
    rr:objectMap [
      rml:reference "releases/language" ;
      rr:datatype xsd:string
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate tbfy:releaseInitiationType ;
    rr:objectMap [
      rml:reference "releases/initiationType" ;
      rr:datatype xsd:string
    ]
  ].


# *********************************
# Contracting Process mapping rules
# *********************************

<ContractingProcessMap>
  a rr:TriplesMap ;

  rml:logicalSource [
    rml:source "input.xml" ; 
    rml:referenceFormulation ql:XPath ;
    rml:iterator "/root/releases"
  ];

  rr:subjectMap [
    rr:template "http://data.tbfy.eu/contractingProcess/{ocid}" ;
    rr:class ocds:ContractingProcess
  ];
  
  rr:predicateObjectMap [
    rr:predicate ocds:ocid ;
    rr:objectMap [
      rml:reference "ocid" ;
      rr:datatype xsd:string
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:isFundedBy ;
    rr:objectMap [
      rr:template "http://data.tbfy.eu/plan/{ocid}_{id}/project/{planning/budget/projectID}"
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:hasRelease ;
    rr:objectMap [
      rr:template "http://data.tbfy.eu/contractingProcess/{ocid}/release/{id}"
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:hasPlan ;
    rr:objectMap [
      rr:template "http://data.tbfy.eu/plan/{planning/../ocid}_{planning/../id}"
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:hasTender ;
    rr:objectMap [
      rr:template "http://data.tbfy.eu/tender/{ocid}_{tender/id}"
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:hasAward ;
    rr:objectMap [
      rr:template "http://data.tbfy.eu/award/{ocid}_{awards/id}"
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:hasContract ;
    rr:objectMap [
      rr:template "http://data.tbfy.eu/contract/{ocid}_{contracts/id}"
    ]
  ].

<ContractingProcessBuyerMap>
  a rr:TriplesMap ;

  rml:logicalSource [
    rml:source "input.xml" ; 
    rml:referenceFormulation ql:XPath ;
    rml:iterator "/root/releases/buyer"
  ];

  rr:subjectMap [
    rr:template "http://data.tbfy.eu/contractingProcess/{../ocid}/buyer" ;
    rr:class ocds:Organisation
  ];
      
  rr:predicateObjectMap [
    rr:predicate ocds:legalName ;
    rr:objectMap [
      rml:reference "name" ;
      rr:datatype xsd:string
    ]
  ];
      
  rr:predicateObjectMap [
    rr:predicate ocds:hasContactPoint ;
    rr:objectMap [
      rr:template "http://data.tbfy.eu/contractingProcess/{../ocid}/buyer/contactPoint"
    ]
  ];
      
  rr:predicateObjectMap [
    rr:predicate ocds:hasAddress ;
    rr:objectMap [
      rr:template "http://data.tbfy.eu/contractingProcess/{../ocid}/buyer/address"
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:isBuyerFor ;
    rr:objectMap [
      rr:template "http://data.tbfy.eu/contractingProcess/{../ocid}"
    ]
  ];
          
  rr:predicateObjectMap [
    rr:predicate ocds:playsRoleIn ;
    rr:objectMap [
      rr:template "http://data.tbfy.eu/contractingProcess/{../ocid}"
    ]
  ].

<ContractProcessBuyerAddressMap>
  a rr:TriplesMap ;

  rml:logicalSource [
    rml:source "input.xml" ; 
    rml:referenceFormulation ql:XPath ;
    rml:iterator "/root/releases/buyer/address"
  ];

  rr:subjectMap [
    rr:template "http://data.tbfy.eu/contractingProcess/{../../ocid}/buyer/address";
    rr:class ocds:Address
  ];

  rr:predicateObjectMap [
    rr:predicate schema:addressLocality ;
    rr:objectMap [
      rml:reference "locality" ;
      rr:datatype xsd:string
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate schema:postalCode ;
    rr:objectMap [
      rml:reference "postalCode" ;
      rr:datatype xsd:string
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate schema:addressCountry ;
    rr:objectMap [
      rml:reference "countryName" ;
      rr:datatype xsd:string
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate schema:streetAddress ;
    rr:objectMap [
      rml:reference "streetAddress" ;
      rr:datatype xsd:string
    ]
  ].

<ContractProcessBuyerContactpointMap>
  a rr:TriplesMap ;

  rml:logicalSource [
    rml:source "input.xml" ; 
    rml:referenceFormulation ql:XPath ;
    rml:iterator "/root/releases/buyer/contactPoint"
  ];

  rr:subjectMap [
    rr:template "http://data.tbfy.eu/contractingProcess/{../../ocid}/buyer/contactPoint" ;
    rr:class ocds:ContactPoint ;
    rr:class ocds:Person
  ];
  
  rr:predicateObjectMap [
    rr:predicate schema:email ;
    rr:objectMap [
      rml:reference "email" ;
      rr:datatype xsd:string
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate schema:name ;
    rr:objectMap [
      rml:reference "name" ;
      rr:datatype xsd:string
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate schema:faxNumber ;
    rr:objectMap [
      rml:reference "faxNumber" ;
      rr:datatype xsd:string
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate schema:telephone ;
    rr:objectMap [
      rml:reference "telephone" ;
      rr:datatype xsd:string
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate schema:URL ;
    rr:objectMap [
      rml:reference "url" ;
      rr:datatype xsd:string
    ]
  ].


# ******************
# Plan mapping rules
# ******************

<PlanMap>
  a rr:TriplesMap ;

  rml:logicalSource [
    rml:source "input.xml" ; 
    rml:referenceFormulation ql:XPath ;
    rml:iterator "/root/releases/planning"
  ];

  rr:subjectMap [
    rr:template "http://data.tbfy.eu/plan/{../ocid}_{../id}" ;
    rr:class ocds:Plan
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:hasBudget ;
    rr:objectMap [
      rr:template "http://data.tbfy.eu/plan/{../ocid}_{../id}/budget/{budget/id}"
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:procurementRationale ;
    rr:objectMap [
      rml:reference "rationale" ;
      rr:datatype xsd:string
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:hasDocument ;
    rr:objectMap [
      rr:template "http://data.tbfy.eu/plan/{../ocid}_{../id}/document/{documents/id}"
    ]
  ].

<PlanBudgetMap>
  a rr:TriplesMap ;

  rml:logicalSource [
    rml:source "input.xml" ; 
    rml:referenceFormulation ql:XPath ;
    rml:iterator "/root/releases/planning/budget"
  ];

  rr:subjectMap [
    rr:template "http://data.tbfy.eu/plan/{../../ocid}_{../../id}/budget/{id}" ;
    rr:class ocds:Budget
  ];
  
  rr:predicateObjectMap [
    rr:predicate ocds:budgetId ;
    rr:objectMap [
      rml:reference "id" ;
      rr:datatype xsd:string
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:hasReservedValue ;
    rr:objectMap [
      rr:template "http://data.tbfy.eu/plan/{../../ocid}_{../../id}/budget/{id}/reservedValue"
    ]
  ].

<PlanBudgetValueMap>
  a rr:TriplesMap ;

  rml:logicalSource [
    rml:source "input.xml" ; 
    rml:referenceFormulation ql:XPath ;
    rml:iterator "/root/releases/planning/budget/amount"
  ];

  rr:subjectMap [
    rr:template "http://data.tbfy.eu/plan/{../../../ocid}_{../../../id}/budget/{../id}/reservedValue" ;
    rr:class ocds:Value
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:valueAmount ;
    rr:objectMap [
      rml:reference "amount" ;
      rr:datatype xsd:decimal
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:valueCurrency;
    rr:objectMap [
      rml:reference "currency" ;
      rr:datatype xsd:string
    ]
  ].

<PlanProjectMap>
  a rr:TriplesMap ;

  rml:logicalSource [
    rml:source "input.xml" ; 
    rml:referenceFormulation ql:XPath ;
    rml:iterator "/root/releases/planning/budget"
  ];

  rr:subjectMap [
    rr:template "http://data.tbfy.eu/plan/{../../ocid}_{../../id}/project/{projectID}" ;
    rr:class ocds:Project
  ];
      
  rr:predicateObjectMap [
    rr:predicate ocds:projectId ;
    rr:objectMap [
      rml:reference "projectID" ;
      rr:datatype xsd:string
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate dc:title ;
    rr:objectMap [
      rml:reference "project" ;
      rr:datatype xsd:string
    ]
  ].

<PlanDocumentMap>
  a rr:TriplesMap ;

  rml:logicalSource [
    rml:source "input.xml" ; 
    rml:referenceFormulation ql:XPath ;
    rml:iterator "/root/releases/planning/documents"
  ];

  rr:subjectMap [
    rr:template "http://data.tbfy.eu/plan/{../../ocid}_{../../id}/document/{id}" ;
    rr:class ocds:Document
  ];
    
  rr:predicateObjectMap [
    rr:predicate ocds:documentId ;
    rr:objectMap [
      rml:reference "id" ;
      rr:datatype xsd:string
    ]
  ];
    
  rr:predicateObjectMap [
    rr:predicate schema:URL ;
    rr:objectMap [
      rml:reference "url" ;
      rr:datatype xsd:string
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate dc:language ;
    rr:objectMap [
      rml:reference "language" ;
      rr:datatype xsd:string
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:documentType ;
    rr:objectMap [
      rml:reference "documentType"
    ]
  ].


# ********************
# Tender mapping rules
# ********************

<TenderMap>
  a rr:TriplesMap ;

  rml:logicalSource [
    rml:source "input.xml" ; 
    rml:referenceFormulation ql:XPath ;
    rml:iterator "/root/releases/tender"
  ];

  rr:subjectMap [
    rr:template "http://data.tbfy.eu/tender/{../ocid}_{id}" ;
    rr:class ocds:Tender
  ];
      
  rr:predicateObjectMap [
    rr:predicate ocds:tenderId ;
    rr:objectMap [
      rml:reference "id" ;
      rr:datatype xsd:string
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate dc:title ;
    rr:objectMap [ 
      rml:reference "title" ;
      rr:datatype xsd:string
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate dc:description ;
    rr:objectMap [ 
      rml:reference "description" ;
      rr:datatype xsd:string
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:tenderStatus ;
    rr:objectMap [
      rml:reference "status"
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:hasItemToBeProcured ;
    rr:objectMap [
      rr:template "http://data.tbfy.eu/tender/{../ocid}_{id}/item/{items/id}"
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:hasMinEstimatedValue ;
    rr:objectMap [
      rr:template "http://data.tbfy.eu/tender/{../ocid}_{minValue/../id}/minValue"
    ]
  ];

 rr:predicateObjectMap [
    rr:predicate ocds:hasMaxEstimatedValue ;
    rr:objectMap [
      rr:template "http://data.tbfy.eu/tender/{../ocid}_{value/../id}/maxValue"
    ]
  ];
 
  rr:predicateObjectMap [
    rr:predicate ocds:procurementMethod ;
    rr:objectMap [
      rml:reference "procurementMethod"
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:procurementMethodDetails ;
    rr:objectMap [
      rml:reference "procurementMethodDetails" ;
      rr:datatype xsd:string
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:procurementMethodRationale ;
    rr:objectMap [
      rml:reference "procurementMethodRationale" ;
      rr:datatype xsd:string
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:awardCriteria ;
    rr:objectMap [
      rml:reference "awardCriteria"
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:awardCriteriaDetails ;
    rr:objectMap [
      rml:reference "awardCriteriaDetails" ;
      rr:datatype xsd:string
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:submissionMethod ;
    rr:objectMap [
      rml:reference "submissionMethod"
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:submissionMethodDetails ;
    rr:objectMap [
      rml:reference "submissionMethodDetails" ;
      rr:datatype xsd:string
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:hasTenderPeriod ;
    rr:objectMap [
      rr:template "http://data.tbfy.eu/tender/{../ocid}_{tenderPeriod/../id}/period"
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:hasEnquiryPeriod ;
    rr:objectMap [
      rr:template "http://data.tbfy.eu/tender/{../ocid}_{enquiryPeriod/../id}/enquiryPeriod"
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:enquiry ;
    rr:objectMap [
      rml:reference "hasEnquiries" ;
      rr:datatype xsd:boolean
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:eligibilityCriteria ;
    rr:objectMap [
      rml:reference "eligibilityCriteria" ;
      rr:datatype xsd:string
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:hasAwardPeriod ;
    rr:objectMap [
      rr:template "http://data.tbfy.eu/tender/{../ocid}_{awardPeriod/../id}/awardPeriod"
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:numberOfTenderers ;
    rr:objectMap [
      rml:reference "numberOfTenderers" ;
      rr:datatype xsd:integer
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:hasDocument ;
    rr:objectMap [
      rr:template "http://data.tbfy.eu/tender/{../ocid}_{id}/document/{documents/id}"
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:hasMilestone ;
    rr:objectMap [
      rr:template "http://data.tbfy.eu/tender/{../ocid}_{id}/milestone/{milestones/id}"
    ]
  ];
  
  rr:predicateObjectMap [
    rr:predicate ocds:hasAmendment ;
    rr:objectMap [
      rr:template "http://data.tbfy.eu/tender/{../ocid}_{amendment/../id}/amendment/"
    ]
  ].

<TenderItemMap>
  a rr:TriplesMap ;

  rml:logicalSource [
    rml:source "input.xml" ; 
    rml:referenceFormulation ql:XPath ;
    rml:iterator "/root/releases/tender/items"
  ];

  rr:subjectMap [
    rr:template "http://data.tbfy.eu/tender/{../../ocid}_{../id}/item/{id}" ;
    rr:class ocds:Item
  ];
     
  rr:predicateObjectMap [
    rr:predicate ocds:itemId ;
    rr:objectMap [
      rml:reference "id" ;
      rr:datatype xsd:string
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate dc:description ;
    rr:objectMap [ 
      rml:reference "description" ;
      rr:datatype xsd:string
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:hasClassificaton ;
    rr:objectMap [
      rml:reference "classification/id"
    ]
  ];
      
  rr:predicateObjectMap [
    rr:predicate ocds:classificationScheme ;
    rr:objectMap [
      rml:reference "classification/scheme"
    ]
  ];
        
  rr:predicateObjectMap [
    rr:predicate ocds:hasAdditionalItemClassificaton ;
    rr:objectMap [
      rml:reference "additionalClassifications/id"
    ]
  ];
      
  rr:predicateObjectMap [
    rr:predicate ocds:additionalItemClassificationScheme ;
    rr:objectMap [
      rml:reference "additionalClassifications/scheme"
    ]
  ].

<TenderMinValueMap>
  a rr:TriplesMap ;

  rml:logicalSource [
    rml:source "input.xml" ; 
    rml:referenceFormulation ql:XPath ;
    rml:iterator "/root/releases/tender/minValue"
  ];

  rr:subjectMap [
    rr:template "http://data.tbfy.eu/tender/{../../ocid}_{../id}/minValue" ;
    rr:class ocds:Value
  ];
      
  rr:predicateObjectMap [
    rr:predicate ocds:valueAmount ;
    rr:objectMap [
      rml:reference "amount" ;
      rr:datatype xsd:decimal
    ]
  ];
      
  rr:predicateObjectMap [
    rr:predicate ocds:valueCurrency ;
    rr:objectMap [
      rml:reference "currency" ;
      rr:datatype xsd:string
    ]
  ].

<TenderMaxValueMap>
  a rr:TriplesMap ;

  rml:logicalSource [
    rml:source "input.xml" ; 
    rml:referenceFormulation ql:XPath ;
    rml:iterator "/root/releases/tender/value"
  ];

  rr:subjectMap [
    rr:template "http://data.tbfy.eu/tender/{../../ocid}_{../id}/maxValue" ;
    rr:class ocds:Value
  ];
      
  rr:predicateObjectMap [
    rr:predicate ocds:valueAmount ;
    rr:objectMap [
      rml:reference "amount" ;
      rr:datatype xsd:decimal
    ]
  ];
      
  rr:predicateObjectMap [
    rr:predicate ocds:valueCurrency ;
    rr:objectMap [
      rml:reference "currency" ;
      rr:datatype xsd:string
    ]
  ].

<TenderPeriodMap>
  a rr:TriplesMap ;

  rml:logicalSource [
    rml:source "input.xml" ; 
    rml:referenceFormulation ql:XPath ;
    rml:iterator "/root/releases/tender/tenderPeriod"
  ];

  rr:subjectMap [
    rr:template "http://data.tbfy.eu/tender/{../../ocid}_{../id}/period" ;
    rr:class ocds:Period
  ];
     
  rr:predicateObjectMap [
    rr:predicate ocds:periodStartDate ;
    rr:objectMap [
      rml:reference "startDate" ;
      rr:datatype xsd:dateTime
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:periodEndDate ;
    rr:objectMap [
      rml:reference "endDate" ;
      rr:datatype xsd:dateTime
    ]
  ].

<TenderAwardPeriodMap>
  a rr:TriplesMap ;

  rml:logicalSource [
    rml:source "input.xml" ; 
    rml:referenceFormulation ql:XPath ;
    rml:iterator "/root/releases/tender/awardPeriod"
  ];

  rr:subjectMap [
    rr:template "http://data.tbfy.eu/tender/{../../ocid}_{../id}/awardPeriod" ;
    rr:class ocds:Period
  ];
    
  rr:predicateObjectMap [
    rr:predicate ocds:periodStartDate ;
    rr:objectMap [
      rml:reference "startDate" ;
      rr:datatype xsd:dateTime
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:periodEndDate;
    rr:objectMap [
      rml:reference "endDate" ;
      rr:datatype xsd:dateTime
    ]
  ].      

<TenderDocumentMap>
  a rr:TriplesMap ;

  rml:logicalSource [
    rml:source "input.xml" ; 
    rml:referenceFormulation ql:XPath ;
    rml:iterator "/root/releases/tender/documents"
  ];

  rr:subjectMap [
    rr:template "http://data.tbfy.eu/tender/{../../ocid}_{../id}/document/{id}" ;
    rr:class ocds:Document
  ];
    
  rr:predicateObjectMap [
    rr:predicate ocds:documentId ;
    rr:objectMap [
      rml:reference "id" ;
      rr:datatype xsd:string
    ]
  ];
    
  rr:predicateObjectMap [
    rr:predicate ocds:documentType ;
    rr:objectMap [
      rml:reference "documentType"
    ]
  ];
    
  rr:predicateObjectMap [
    rr:predicate dc:language ;
    rr:objectMap [
      rml:reference "language" ;
      rr:datatype xsd:string
    ]
  ];
    
  rr:predicateObjectMap [
    rr:predicate schema:URL ;
    rr:objectMap [
      rml:reference "url" ;
      rr:datatype xsd:string
    ]
  ].

<TenderMilestoneMap>
  a rr:TriplesMap ;

  rml:logicalSource [
    rml:source "input.xml" ; 
    rml:referenceFormulation ql:XPath ;
    rml:iterator "/root/releases/tender/milestones"
  ];

  rr:subjectMap [
    rr:template "http://data.tbfy.eu/tender/{../../ocid}_{../id}/milestone/{id}" ;
    rr:class ocds:Milestone
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:milestoneId ;
    rr:objectMap [
      rml:reference "id" ;
      rr:datatype xsd:string
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate dc:title ;
    rr:objectMap [
      rml:reference "title" ;
      rr:datatype xsd:string
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:milestoneDueDate ;
    rr:objectMap [
      rml:reference "dueDate" ;
      rr:datatype xsd:dateTime
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate dc:description ;
    rr:objectMap [
      rml:reference "description" ;
      rr:datatype xsd:string
    ]
  ].

<TenderMilestoneDocumentMap>
  a rr:TriplesMap ;

  rml:logicalSource [
    rml:source "input.xml" ; 
    rml:referenceFormulation ql:XPath ;
    rml:iterator "/root/releases/tender/milestones/documents"
  ];

  rr:subjectMap [
    rr:template "http://data.tbfy.eu/tender/{../../../ocid}_{../../id}/milestone/{../id}/document/{id}" ;
    rr:class ocds:Document
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:documentId ;
    rr:objectMap [
      rml:reference "id" ;
      rr:datatype xsd:string
    ]
  ];
    
  rr:predicateObjectMap [
    rr:predicate ocds:documentType ;
    rr:objectMap [
      rml:reference "documentType"
    ]
  ];
    
  rr:predicateObjectMap [
    rr:predicate dc:language ;
    rr:objectMap [
      rml:reference "language" ;
      rr:datatype xsd:string
    ]
  ];
    
  rr:predicateObjectMap [
    rr:predicate schema:URL ;
    rr:objectMap [
      rml:reference "url" ;
      rr:datatype xsd:string
    ]
  ].

<TenderAmendmentMap>
  a rr:TriplesMap ;

  rml:logicalSource [
    rml:source "input.xml" ; 
    rml:referenceFormulation ql:XPath ;
    rml:iterator "/root/releases/tender/amendment"
  ];

  rr:subjectMap [
    rr:template "http://data.tbfy.eu/tender/{../../ocid}_{../id}/amendment" ;
    rr:class ocds:Amendment 
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:amendmentDate ;
    rr:objectMap [
      rml:reference "date" ;
      rr:datatype xsd:dateTime
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:hasChange ;
    rr:objectMap [
      rr:template "http://data.tbfy.eu/tender/{../../ocid}_{../id}/amendment/change/{changes/property}"
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:amendmentRationale ;
    rr:objectMap [
      rml:reference "rationale" ;
      rr:datatype xsd:string
    ]
  ].

<TenderAmendmentChangePropertyMap>
  a rr:TriplesMap ;

  rml:logicalSource [
    rml:source "input.xml" ; 
    rml:referenceFormulation ql:XPath ;
    rml:iterator "/root/releases/tender/amendment/changes"
  ];

  rr:subjectMap [
    rr:template "http://data.tbfy.eu/tender/{../../../ocid}_{../../id}/amendment/change/{property}" ;
    rr:class ocds:Change 
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:changeProperty ;
    rr:objectMap [
      rml:reference "property" ;
      rr:datatype xsd:string
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:changeFormerValue ;
    rr:objectMap [
      rml:reference "former_value" ;
      rr:datatype xsd:string
    ]
  ].


# *******************
# Award mapping rules
# *******************

<AwardMap>
  a rr:TriplesMap ;

  rml:logicalSource [
    rml:source "input.xml" ; 
    rml:referenceFormulation ql:XPath ;
    rml:iterator "/root/releases/awards"
  ];

  rr:subjectMap [
    rr:template "http://data.tbfy.eu/award/{../ocid}_{id}" ;
    rr:class ocds:Award
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:awardId ;
    rr:objectMap [
      rml:reference "id" ;
      rr:datatype xsd:string
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:awardDate ;
    rr:objectMap [
      rml:reference "date" ;
      rr:datatype xsd:dateTime
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate dc:title ;
    rr:objectMap [ 
      rml:reference "title" ;
      rr:datatype xsd:string
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:hasAwardValue ;
    rr:objectMap [
      rr:template "http://data.tbfy.eu/award/{../ocid}_{value/../id}/value"
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:awardStatus ;
    rr:objectMap [
      rml:reference "status"
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate dc:description ;
    rr:objectMap [ 
      rml:reference "description" ;
      rr:datatype xsd:string
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:hasAwardedContractPeriod ;
    rr:objectMap [
      rr:template "http://data.tbfy.eu/award/{../ocid}_{contractPeriod/../id}/contractPeriod"
    ]
  ];
  
  rr:predicateObjectMap [
    rr:predicate ocds:hasAwardedItem ;
    rr:objectMap [
      rr:template "http://data.tbfy.eu/award/{../ocid}_{id}/item/{items/id}"
    ]
  ];
    
  rr:predicateObjectMap [
    rr:predicate ocds:hasDocument ;
    rr:objectMap [
      rr:template "http://data.tbfy.eu/award/{../ocid}_{id}/document/{documents/id}"
    ]
  ];
    
  rr:predicateObjectMap [
    rr:predicate ocds:hasAmendment ;
    rr:objectMap [
      rr:template "http://data.tbfy.eu/award/{../ocid}_{amendment/../id}/amendment/"
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:isIssuedForTender ;
    rr:objectMap [
      rr:template "http://data.tbfy.eu/tender/{../ocid}_{../tender/id}"
    ]
  ].
   
<AwardValueMap>
  a rr:TriplesMap ;

  rml:logicalSource [
    rml:source "input.xml" ; 
    rml:referenceFormulation ql:XPath ;
    rml:iterator "/root/releases/awards/value"
  ];

  rr:subjectMap [
    rr:template "http://data.tbfy.eu/award/{../../ocid}_{../id}/value" ;
    rr:class ocds:Value
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:valueAmount ;
    rr:objectMap [
      rml:reference "amount" ;
      rr:datatype xsd:decimal
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:valueCurrency ;
    rr:objectMap [
      rml:reference "currency" ;
      rr:datatype xsd:string
    ]
  ].

<AwardSupplierMap>  
  a rr:TriplesMap ;

  rml:logicalSource [
    rml:source "input.xml" ; 
    rml:referenceFormulation ql:XPath ;
    rml:iterator "/root/releases/awards/suppliers"
  ];

  rr:subjectMap [
    rr:template "http://data.tbfy.eu/award/{../../ocid}_{../id}/supplier/{tbfy_id}" ;
    rr:class ocds:Organisation
  ];
    
  rr:predicateObjectMap [
    rr:predicate ocds:legalName ;
    rr:objectMap [
      rml:reference "name" ;
      rr:datatype xsd:string
    ]
  ];
      
  rr:predicateObjectMap [
    rr:predicate ocds:hasAddress ;
    rr:objectMap [
      rr:template "http://data.tbfy.eu/award/{../../ocid}_{../id}/supplier/{tbfy_id}/address"
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:hasContactPoint ;
    rr:objectMap [
      rr:template "http://data.tbfy.eu/award/{../../ocid}_{../id}/supplier/{tbfy_id}/contactPoint"
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:isSupplierFor ;
    rr:objectMap [
      rr:template "http://data.tbfy.eu/award/{../../ocid}_{../id}"
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:playsRoleIn ;
    rr:objectMap [
      rr:template "http://data.tbfy.eu/contractingProcess/{../../ocid}"
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate owl:sameAs ;
    rr:objectMap [
      rr:template  "http://data.tbfy.eu/organisation/{tbfy_company_jurisdiction_code}-{tbfy_company_number}"
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate tbfy:correspondsToRegOrg ;
    rr:objectMap [
      rr:template  "http://data.tbfy.eu/organisation/{tbfy_company_jurisdiction_code}-{tbfy_company_number}"
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate tbfy:companyReconciliationScore ;
    rr:objectMap [
      rml:reference "tbfy_company_reconciliation_score" ;
      rr:datatype xsd:decimal
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate tbfy:companyReconciliationSource ;
    rr:objectMap [
      rml:reference "tbfy_company_reconciliation_source" ;
      rr:datatype xsd:string
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate tbfy:companyReconciliationDate ;
    rr:objectMap [
      rml:reference "tbfy_company_reconciliation_date" ;
      rr:datatype xsd:date
    ]
  ].

<AwardSupplierAddressMap>
  a rr:TriplesMap ;

  rml:logicalSource [
    rml:source "input.xml" ; 
    rml:referenceFormulation ql:XPath ;
    rml:iterator "/root/releases/awards/suppliers/address"
  ];

  rr:subjectMap [
    rr:template "http://data.tbfy.eu/award/{../../../ocid}_{../../id}/supplier/{../tbfy_id}/address" ;
    rr:class ocds:Address
  ];

  rr:predicateObjectMap [
    rr:predicate schema:addressLocality ;
    rr:objectMap [
      rml:reference "locality" ;
      rr:datatype xsd:string
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate schema:postalCode ;
    rr:objectMap [
      rml:reference "postalCode" ;
      rr:datatype xsd:string
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate schema:addressCountry ;
    rr:objectMap [
      rml:reference "countryName" ;
      rr:datatype xsd:string
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate schema:streetAddress ;
    rr:objectMap [
      rml:reference "streetAddress" ;
      rr:datatype xsd:string
    ]
  ].

<AwardSupplierContactpointMap>
  a rr:TriplesMap ;

  rml:logicalSource [
    rml:source "input.xml" ; 
    rml:referenceFormulation ql:XPath ;
    rml:iterator "/root/releases/awards/suppliers/contactPoint"
  ];

  rr:subjectMap [
    rr:template "http://data.tbfy.eu/award/{../../../ocid}_{../../id}/supplier/{../tbfy_id}/contactPoint" ;
    rr:class ocds:ContactPoint ;
    rr:class ocds:Person
  ];
  
  rr:predicateObjectMap [
    rr:predicate schema:name ;
    rr:objectMap [
      rml:reference "name" ;
      rr:datatype xsd:string
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate schema:email ;
    rr:objectMap [
      rml:reference "email" ;
      rr:datatype xsd:string
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate schema:faxNumber ;
    rr:objectMap [
      rml:reference "faxNumber" ;
      rr:datatype xsd:string
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate schema:telephone ;
    rr:objectMap [
      rml:reference "telephone" ;
      rr:datatype xsd:string
    ]
  ].

<AwardItemMap>
  a rr:TriplesMap ;

  rml:logicalSource [
    rml:source "input.xml" ; 
    rml:referenceFormulation ql:XPath ;
    rml:iterator "/root/releases/awards/items"
  ];

  rr:subjectMap [
    rr:template "http://data.tbfy.eu/award/{../../ocid}_{../id}/item/{id}" ;
    rr:class ocds:Item
  ];
     
  rr:predicateObjectMap [
    rr:predicate ocds:itemId ;
    rr:objectMap [
      rml:reference "id" ;
      rr:datatype xsd:string
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate dc:description ;
    rr:objectMap [ 
      rml:reference "description" ;
      rr:datatype xsd:string
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:hasClassificaton ;
    rr:objectMap [
      rml:reference "classification/id"
    ]
  ];
      
  rr:predicateObjectMap [
    rr:predicate ocds:classificatonScheme ;
    rr:objectMap [
      rml:reference "classification/scheme"
    ]
  ];
        
  rr:predicateObjectMap [
    rr:predicate ocds:hasAdditionalItemClassificaton ;
    rr:objectMap [
      rml:reference "additionalClassifications/id"
    ]
  ];
      
  rr:predicateObjectMap [
    rr:predicate ocds:additionalItemClassificatonScheme ;
    rr:objectMap [
      rml:reference "additionalClassifications/scheme"
    ]
  ].

<AwardContractPeriodMap>
  a rr:TriplesMap ;

  rml:logicalSource [
    rml:source "input.xml" ; 
    rml:referenceFormulation ql:XPath ;
    rml:iterator "/root/releases/awards/contractPeriod"
  ];

  rr:subjectMap [
    rr:template "http://data.tbfy.eu/award/{../../ocid}_{../id}/contractPeriod" ;
    rr:class ocds:Period
  ];
      
  rr:predicateObjectMap [
    rr:predicate ocds:durationInDays ;
    rr:objectMap [
      rml:reference "durationInDays"
    ]
  ];
      
  rr:predicateObjectMap [
    rr:predicate ocds:periodEndDate ;
    rr:objectMap [
      rml:reference "endDate" ;
      rr:datatype xsd:dateTime
    ]
  ];
      
  rr:predicateObjectMap [
    rr:predicate ocds:periodStartDate ;
    rr:objectMap [
      rml:reference "startDate" ;
      rr:datatype xsd:dateTime
    ]
  ].

<AwardDocumentMap>
  a rr:TriplesMap ;

  rml:logicalSource [
    rml:source "input.xml" ; 
    rml:referenceFormulation ql:XPath ;
    rml:iterator "/root/releases/awards/documents"
  ];

  rr:subjectMap [
    rr:template "http://data.tbfy.eu/award/{../../ocid}_{../id}/document/{id}" ;
    rr:class ocds:Document
  ];
    
  rr:predicateObjectMap [
    rr:predicate ocds:documentId ;
    rr:objectMap [
      rml:reference "id" ;
      rr:datatype xsd:string
    ]
  ];
    
  rr:predicateObjectMap [
    rr:predicate ocds:documentType ;
    rr:objectMap [
      rml:reference "documentType"
    ]
  ];
    
  rr:predicateObjectMap [
    rr:predicate dc:language ;
    rr:objectMap [
      rml:reference "language" ;
      rr:datatype xsd:string
    ]
  ];
    
  rr:predicateObjectMap [
    rr:predicate schema:URL ;
    rr:objectMap [
      rml:reference "url" ;
      rr:datatype xsd:string
    ]
  ].

<AwardAmendmentMap>
  a rr:TriplesMap ;

  rml:logicalSource [
    rml:source "input.xml" ; 
    rml:referenceFormulation ql:XPath ;
    rml:iterator "/root/releases/awards/amendment"
  ];

  rr:subjectMap [
    rr:template "http://data.tbfy.eu/award/{../../ocid}_{../id}/amendment" ;
    rr:class ocds:Amendment 
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:amendmentDate ;
    rr:objectMap [
      rml:reference "date" ;
      rr:datatype xsd:dateTime
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:hasChange ;
    rr:objectMap [
      rr:template "http://data.tbfy.eu/award/{../../ocid}_{../id}/amendment/change/{changes/property}"
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:amendmentRationale ;
    rr:objectMap [
      rml:reference "rationale" ;
      rr:datatype xsd:string
    ]
  ].

<AwardAmendmentChangePropertyMap>
  a rr:TriplesMap ;

  rml:logicalSource [
    rml:source "input.xml" ; 
    rml:referenceFormulation ql:XPath ;
    rml:iterator "/root/releases/awards/amendment/changes"
  ];

  rr:subjectMap [
    rr:template "http://data.tbfy.eu/award/{../../../ocid}_{../../id}/amendment/change/{property}" ;
    rr:class ocds:Change 
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:changeProperty ;
    rr:objectMap [
      rml:reference "property" ;
      rr:datatype xsd:string
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:changeFormerValue ;
    rr:objectMap [
      rml:reference "former_value" ;
      rr:datatype xsd:string
    ]
  ].


# **********************
# Contract mapping rules
# **********************

<ContractMap>
  a rr:TriplesMap ;

  rml:logicalSource [
    rml:source "input.xml" ; 
    rml:referenceFormulation ql:XPath ;
    rml:iterator "/root/releases/contracts"
  ];

  rr:subjectMap [
    rr:template "http://data.tbfy.eu/contract/{../ocid}_{id}" ;
    rr:class ocds:Contract
  ];
  
  rr:predicateObjectMap [
    rr:predicate ocds:contractId ;
    rr:objectMap [
      rml:reference "id" ;
      rr:datatype xsd:string
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:isIssuedForAward ;
    rr:objectMap [
      rr:template "http://data.tbfy.eu/award/{../ocid}_{awardID}"
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate dc:title ;
    rr:objectMap [ 
      rml:reference "title" ;
      rr:datatype xsd:string
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate dc:description ;
    rr:objectMap [ 
      rml:reference "description" ;
      rr:datatype xsd:string
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:contractStatus ;
    rr:objectMap [ 
      rml:reference "status" 
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:hasContractPeriod ;
    rr:objectMap [
      rr:template "http://data.tbfy.eu/contract/{../ocid}_{period/../id}/contractPeriod"
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:hasContractValue ;
    rr:objectMap [
      rr:template "http://data.tbfy.eu/contract/{../ocid}_{value/../id}/contractValue"
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:hasContractedItem ;
    rr:objectMap [
      rr:template "http://data.tbfy.eu/contract/{../ocid}_{id}/item/{items/id}"
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:dateContractSigned ;
    rr:objectMap [ 
      rml:reference "dateSigned" ;
      rr:datatype xsd:dateTime
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:hasDocument ;
    rr:objectMap [
      rr:template "http://data.tbfy.eu/contract/{../ocid}_{id}/document/{documents/id}"
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:hasAmendment ;
    rr:objectMap [
      rr:template "http://data.tbfy.eu/contract/{../ocid}_{amendment/../id}/amendment/"
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:hasContractImplementation ;
    rr:objectMap [
      rr:template "http://data.tbfy.eu/contract/{../ocid}_{implementation/../id}/implementation"
    ]
  ].

<ContractPeriodMap>
  a rr:TriplesMap ;

  rml:logicalSource [
    rml:source "input.xml" ; 
    rml:referenceFormulation ql:XPath ;
    rml:iterator "/root/releases/contracts/period"
  ];

  rr:subjectMap [
    rr:template "http://data.tbfy.eu/contract/{../../ocid}_{../id}/contractPeriod" ;
    rr:class ocds:Period
  ];
    
  rr:predicateObjectMap [
    rr:predicate ocds:periodStartDate ;
    rr:objectMap [
      rml:reference "startDate" ;
      rr:datatype xsd:dateTime
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:periodEndDate ;
    rr:objectMap [
      rml:reference "endDate" ;
      rr:datatype xsd:dateTime
    ]
  ].      

<ContractValueMap>
  a rr:TriplesMap ;

  rml:logicalSource [
    rml:source "input.xml" ; 
    rml:referenceFormulation ql:XPath ;
    rml:iterator "/root/releases/contracts/value"
  ];

  rr:subjectMap [
    rr:template "http://data.tbfy.eu/contract/{../../ocid}_{../id}/value" ;
    rr:class ocds:Value
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:valueAmount ;
    rr:objectMap [
      rml:reference "amount" ;
      rr:datatype xsd:decimal
    ]
  ];
      
  rr:predicateObjectMap [
    rr:predicate ocds:valueCurrency ;
    rr:objectMap [
      rml:reference "currency" ;
      rr:datatype xsd:string
    ]
  ].

<ContractItemMap>
  a rr:TriplesMap ;

  rml:logicalSource [
    rml:source "input.xml" ; 
    rml:referenceFormulation ql:XPath ;
    rml:iterator "/root/releases/contracts/items"
  ];

  rr:subjectMap [
    rr:template "http://data.tbfy.eu/contract/{../../ocid}_{../id}/item/{id}" ;
    rr:class ocds:Item
  ];
     
  rr:predicateObjectMap [
    rr:predicate ocds:itemId ;
    rr:objectMap [
      rml:reference "id" ;
      rr:datatype xsd:string
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate dc:description ;
    rr:objectMap [ 
      rml:reference "description" ;
      rr:datatype xsd:string
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:hasClassificaton ;
    rr:objectMap [
      rml:reference "classification/id"
    ]
  ];
      
  rr:predicateObjectMap [
    rr:predicate ocds:classificatonScheme ;
    rr:objectMap [
      rml:reference "classification/scheme"
    ]
  ];
        
  rr:predicateObjectMap [
    rr:predicate ocds:hasAdditionalItemClassificaton ;
    rr:objectMap [
      rml:reference "additionalClassifications/id"
    ]
  ];
      
  rr:predicateObjectMap [
    rr:predicate ocds:additionalItemClassificatonScheme ;
    rr:objectMap [
      rml:reference "additionalClassifications/scheme"
    ]
  ].

<ContractDocumentMap>
  a rr:TriplesMap ;

  rml:logicalSource [
    rml:source "input.xml" ; 
    rml:referenceFormulation ql:XPath ;
    rml:iterator "/root/releases/contracts/documents"
  ];

  rr:subjectMap [
    rr:template "http://data.tbfy.eu/contract/{../../ocid}_{../id}/document/{id}" ;
    rr:class ocds:Document
  ];
    
  rr:predicateObjectMap [
    rr:predicate ocds:documentId ;
    rr:objectMap [
      rml:reference "id" ;
      rr:datatype xsd:string
    ]
  ];
    
  rr:predicateObjectMap [
    rr:predicate ocds:documentType ;
    rr:objectMap [
      rml:reference "documentType"
    ]
  ];
    
  rr:predicateObjectMap [
    rr:predicate dc:language ;
    rr:objectMap [
      rml:reference "language" ;
      rr:datatype xsd:string
    ]
  ];
    
  rr:predicateObjectMap [
    rr:predicate schema:URL ;
    rr:objectMap [
      rml:reference "url" ;
      rr:datatype xsd:string
    ]
  ].

<ContractAmendmentMap>
  a rr:TriplesMap ;

  rml:logicalSource [
    rml:source "input.xml" ; 
    rml:referenceFormulation ql:XPath ;
    rml:iterator "/root/releases/contracts/amendment"
  ];

  rr:subjectMap [
    rr:template "http://data.tbfy.eu/contract/{../../ocid}_{../id}/amendment" ;
    rr:class ocds:Amendment 
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:amendmentDate ;
    rr:objectMap [
      rml:reference "date" ;
      rr:datatype xsd:dateTime
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:hasChange ;
    rr:objectMap [
      rr:template "http://data.tbfy.eu/contract/{../../ocid}_{../id}/amendment/change/{changes/property}"
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:amendmentRationale ;
    rr:objectMap [
      rml:reference "rationale" ;
      rr:datatype xsd:string
    ]
  ].

<ContractAmendmentChangePropertyMap>
  a rr:TriplesMap ;

  rml:logicalSource [
    rml:source "input.xml" ; 
    rml:referenceFormulation ql:XPath ;
    rml:iterator "/root/releases/contracts/amendment/changes"
  ];

  rr:subjectMap [
    rr:template "http://data.tbfy.eu/contract/{../../../ocid}_{../../id}/amendment/change/{property}" ;
    rr:class ocds:Change 
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:changeProperty ;
    rr:objectMap [
      rml:reference "property" ;
      rr:datatype xsd:string
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:changeFormerValue ;
    rr:objectMap [
      rml:reference "former_value" ;
      rr:datatype xsd:string
    ]
  ].

<ContractImplementationMap>
  a rr:TriplesMap ;

  rml:logicalSource [
    rml:source "input.xml" ; 
    rml:referenceFormulation ql:XPath ;
    rml:iterator "/root/releases/contracts/implementation"
  ];

  rr:subjectMap [
    rr:template "http://data.tbfy.eu/contract/{../../ocid}_{../id}/implementation" ;
    rr:class ocds:Implementation
  ];
   
  rr:predicateObjectMap [
    rr:predicate ocds:hasTransaction ;
    rr:objectMap [
      rr:template "http://data.tbfy.eu/contract/{../../ocid}_{../id}/implementation/transaction/{transaction/id}"
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:hasMilestone ;
    rr:objectMap [
      rr:template "http://data.tbfy.eu/contract/{../../ocid}_{../id}/implementation/milestone/{milestone/id}"
    ]
  ];
     
  rr:predicateObjectMap [
    rr:predicate ocds:hasDocument ;
    rr:objectMap [
      rr:template "http://data.tbfy.eu/contract/{../../ocid}_{../id}/implementation/document/{document/id}"
    ]
  ].

<ContractImplementationTransactionMap>
  a rr:TriplesMap ;

  rml:logicalSource [
    rml:source "input.xml" ; 
    rml:referenceFormulation ql:XPath ;
    rml:iterator "/root/releases/contracts/implementation/transactions"
  ];

  rr:subjectMap [
    rr:template "http://data.tbfy.eu/contract/{../../../ocid}_{../../id}/implementation/transaction/{id}" ;
    rr:class ocds:Value
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:transactionId ;
    rr:objectMap [
      rml:reference "id" ;
      rr:datatype xsd:string
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:transactionDataSource ;
    rr:objectMap [
      rml:reference "source" ;
      rr:datatype xsd:string
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:transactionDate ;
    rr:objectMap [
      rml:reference "date" ;
      rr:datatype xsd:dateTime
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:hasTransactionValue ;
    rr:objectMap [
      rr:template "http://data.tbfy.eu/contract/{../../../ocid}_{../../id}/implementation/transaction/{amount/../id}/value"
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:transactionId ;
    rr:objectMap [
      rml:reference "id" ;
      rr:datatype xsd:string
    ]
  ].

<ContractImplementationTransactionValueMap>
  a rr:TriplesMap ;

  rml:logicalSource [
    rml:source "input.xml" ; 
    rml:referenceFormulation ql:XPath ;
    rml:iterator "/root/releases/contracts/implementation/transactions/amount"
  ];

  rr:subjectMap [
    rr:template "http://data.tbfy.eu/contract/{../../../../ocid}_{../../../id}/implementation/transaction/{../id}/value" ;
    rr:class ocds:Value
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:valueAmount ;
    rr:objectMap [
      rml:reference "amount" ;
      rr:datatype xsd:decimal
    ]
  ];
      
  rr:predicateObjectMap [
    rr:predicate ocds:valueCurrency ;
    rr:objectMap [
      rml:reference "currency" ;
      rr:datatype xsd:string
    ]
  ].

<ContractImplementationTransactionPayerMap>
  a rr:TriplesMap ;

  rml:logicalSource [
    rml:source "input.xml" ; 
    rml:referenceFormulation ql:XPath ;
    rml:iterator "/root/releases/contracts/implementation/transactions/providerOrganization"
  ];

  rr:subjectMap [
    rr:template "http://data.tbfy.eu/contract/{../../../../ocid}_{../../../id}/implementation/transaction/{../id}/payer" ;
    rr:class ocds:Organisation
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:legalName ;
    rr:objectMap [
      rml:reference "legalName" ;
      rr:datatype xsd:string
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:URI ;
    rr:objectMap [
      rml:reference "uri" ;
      rr:datatype xsd:anyURI
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:isPayerFor ;
    rr:objectMap [
      rr:template "http://data.tbfy.eu/contract/{../../../../ocid}_{../../../id}/implementation/transaction/{../id}"
    ]
  ].

<ContractImplementationTransactionPayeeMap>
  a rr:TriplesMap ;

  rml:logicalSource [
    rml:source "input.xml" ; 
    rml:referenceFormulation ql:XPath ;
    rml:iterator "/root/releases/contracts/implementation/transactions/receiverOrganization"
  ];

  rr:subjectMap [
    rr:template "http://data.tbfy.eu/contract/{../../../../ocid}_{../../../id}/implementation/transaction/{../id}/payee" ;
    rr:class ocds:Organisation
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:legalName ;
    rr:objectMap [
      rml:reference "legalName" ;
      rr:datatype xsd:string
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:URI ;
    rr:objectMap [
      rml:reference "uri" ;
      rr:datatype xsd:anyURI
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:isPayeeFor ;
    rr:objectMap [
      rr:template "http://data.tbfy.eu/contract/{../../../../ocid}_{../../../id}/implementation/transaction/{../id}"
    ]
  ].

<ContractImplementationMilestoneMap>
  a rr:TriplesMap ;

  rml:logicalSource [
    rml:source "input.xml" ; 
    rml:referenceFormulation ql:XPath ;
    rml:iterator "/root/releases/contracts/implementation/milestones"
  ];

  rr:subjectMap [
    rr:template "http://data.tbfy.eu/contract/{../../../ocid}_{../../id}/milestone/{id}" ;
    rr:class ocds:Milestone
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:milestoneId ;
    rr:objectMap [
      rml:reference "id" ;
      rr:datatype xsd:string
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate dc:title ;
    rr:objectMap [
      rml:reference "title" ;
      rr:datatype xsd:string
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:milestoneDueDate ;
    rr:objectMap [
      rml:reference "dueDate" ;
      rr:datatype xsd:dateTime
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate dc:description ;
    rr:objectMap [
      rml:reference "description" ;
      rr:datatype xsd:string
    ]
  ].

<ContractImplementationMilestoneDocumentMap>
  a rr:TriplesMap ;

  rml:logicalSource [
    rml:source "input.xml" ; 
    rml:referenceFormulation ql:XPath ;
    rml:iterator "/root/releases/contracts/implementation/milestones/documents"
  ];

  rr:subjectMap [
    rr:template "http://data.tbfy.eu/contract/{../../../../ocid}_{../../../id}/milestone/{../id}/document/{id}" ;
    rr:class ocds:Document
  ];

  rr:predicateObjectMap [
    rr:predicate ocds:documentId ;
    rr:objectMap [
      rml:reference "id" ;
      rr:datatype xsd:string
    ]
  ];
    
  rr:predicateObjectMap [
    rr:predicate ocds:documentType ;
    rr:objectMap [
      rml:reference "documentType"
    ]
  ];
    
  rr:predicateObjectMap [
    rr:predicate dc:language ;
    rr:objectMap [
      rml:reference "language" ;
      rr:datatype xsd:string
    ]
  ];
    
  rr:predicateObjectMap [
    rr:predicate schema:URL ;
    rr:objectMap [
      rml:reference "url" ;
      rr:datatype xsd:string
    ]
  ].

<ContractImplementationDocumentMap>
  a rr:TriplesMap ;

  rml:logicalSource [
    rml:source "input.xml" ; 
    rml:referenceFormulation ql:XPath ;
    rml:iterator "/root/releases/contracts/implementation/documents"
  ];

  rr:subjectMap [
    rr:template "http://data.tbfy.eu/contract/{../../../ocid}_{../../id}/document/{id}" ;
    rr:class ocds:Document
  ];
    
  rr:predicateObjectMap [
    rr:predicate ocds:documentId ;
    rr:objectMap [
      rml:reference "id" ;
      rr:datatype xsd:string
    ]
  ];
    
  rr:predicateObjectMap [
    rr:predicate ocds:documentType ;
    rr:objectMap [
      rml:reference "documentType"
    ]
  ];
    
  rr:predicateObjectMap [
    rr:predicate dc:language ;
    rr:objectMap [
      rml:reference "language" ;
      rr:datatype xsd:string
    ]
  ];
    
  rr:predicateObjectMap [
    rr:predicate schema:URL ;
    rr:objectMap [
      rml:reference "url" ;
      rr:datatype xsd:string
    ]
  ].
